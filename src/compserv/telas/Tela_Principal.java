/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package compserv.telas;

import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import compserv.configdb.Modulo_conexao;
import java.text.DateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import java.sql.*;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Cell;

import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.properties.HorizontalAlignment;
import com.itextpdf.layout.properties.TextAlignment;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Cell;

import com.itextpdf.layout.element.Image;
import com.itextpdf.io.image.ImageDataFactory;
import java.net.URL;

/**
 *
 * @author ALLAN
 */
public class Tela_Principal extends javax.swing.JFrame {

    Connection conexao = null;

    /**
     * Creates new form Tela_Principal
     */
    public Tela_Principal() {
        initComponents();
        conexao = Modulo_conexao.conector();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        Menu = new javax.swing.JMenuBar();
        menCad = new javax.swing.JMenu();
        menCadCli = new javax.swing.JMenuItem();
        menCadOs = new javax.swing.JMenuItem();
        menCadUser = new javax.swing.JMenuItem();
        menRel = new javax.swing.JMenu();
        menRelCli = new javax.swing.JMenuItem();
        menRelSer = new javax.swing.JMenuItem();
        menAju = new javax.swing.JMenu();
        menAjuSob = new javax.swing.JMenuItem();
        menOp = new javax.swing.JMenu();
        menOpEx = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CompServ - sistema de contrle de ordem de servico");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        desktop.setPreferredSize(new java.awt.Dimension(658, 658));

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compserv/icones/Servcomplogo.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        lblUsuario.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsuario.setText("NAME");

        lblData.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblData.setText("DD/MM/AA");

        menCad.setText("Cadastro");

        menCadCli.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menCadCli.setText("Cliente");
        menCadCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menCadCliActionPerformed(evt);
            }
        });
        menCad.add(menCadCli);

        menCadOs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menCadOs.setText("OS");
        menCadOs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menCadOsActionPerformed(evt);
            }
        });
        menCad.add(menCadOs);

        menCadUser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menCadUser.setText("Usuario");
        menCadUser.setEnabled(false);
        menCadUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menCadUserActionPerformed(evt);
            }
        });
        menCad.add(menCadUser);

        Menu.add(menCad);

        menRel.setText("Relatorio");
        menRel.setEnabled(false);

        menRelCli.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menRelCli.setText("Clientes");
        menRelCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menRelCliActionPerformed(evt);
            }
        });
        menRel.add(menRelCli);

        menRelSer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menRelSer.setText("Servicos");
        menRelSer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menRelSerActionPerformed(evt);
            }
        });
        menRel.add(menRelSer);

        Menu.add(menRel);

        menAju.setText("Ajuda");

        menAjuSob.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menAjuSob.setText("Sobre");
        menAjuSob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menAjuSobActionPerformed(evt);
            }
        });
        menAju.add(menAjuSob);

        Menu.add(menAju);

        menOp.setText("Opcoes");

        menOpEx.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menOpEx.setText("Sair");
        menOpEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menOpExActionPerformed(evt);
            }
        });
        menOp.add(menOpEx);

        Menu.add(menOp);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(187, 187, 187)
                        .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuario)
                    .addComponent(lblData))
                .addGap(56, 56, 56)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, Short.MAX_VALUE)
                .addGap(114, 114, 114))
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
        );

        jLabel1.getAccessibleContext().setAccessibleName("logo");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Date data = new Date();
        DateFormat formatador = DateFormat.getDateInstance(DateFormat.SHORT);
        String dataFormatada = formatador.format(data);
        lblData.setText(dataFormatada);
    }//GEN-LAST:event_formWindowActivated

    private void menOpExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menOpExActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja sair?", "Atenção", JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            System.exit(0);

        }
    }//GEN-LAST:event_menOpExActionPerformed

    private void menAjuSobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menAjuSobActionPerformed
        Tela_Sobre sobre = new Tela_Sobre();
        sobre.setVisible(true);
        desktop.add(sobre);
    }//GEN-LAST:event_menAjuSobActionPerformed

    private void menCadUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menCadUserActionPerformed
        Tela_Usuario usuario = new Tela_Usuario();
        usuario.setVisible(true);
        desktop.add(usuario);
    }//GEN-LAST:event_menCadUserActionPerformed

    private void menCadCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menCadCliActionPerformed
        Tela_Cliente cliente = new Tela_Cliente();
        cliente.setVisible(true);
        desktop.add(cliente);
    }//GEN-LAST:event_menCadCliActionPerformed

    private void menCadOsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menCadOsActionPerformed
        Tela_Os OS = new Tela_Os();
        OS.setVisible(true);
        desktop.add(OS);
    }//GEN-LAST:event_menCadOsActionPerformed

    private void menRelCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menRelCliActionPerformed
        int confirma = JOptionPane.showConfirmDialog(null, "Confirma a impressão do relatório de Clientes?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (confirma == JOptionPane.YES_OPTION) {
            try {
                // Criar um novo documento PDF
                PdfDocument pdfDoc = new PdfDocument(new PdfWriter("relatorio-clientes.pdf"));
                Document document = new Document(pdfDoc);

                // Carregar a imagem
                URL imageUrl = getClass().getResource("/compserv/icones/Servcomplogo.png");
                ImageData imageData = ImageDataFactory.create(imageUrl);
                Image image = new Image(imageData);

                // Ajustar o tamanho da imagem
                image.scaleToFit(99, 99);

                // Criar o título
                Paragraph title = new Paragraph("Relatório de Clientes").setFontSize(20).setTextAlignment(TextAlignment.CENTER).setBold();

                // Criar uma tabela com 7 colunas para o título e a imagem
                Table titleTable = new Table(14);

// Adicionar o título à tabela, mesclando 7 colunas
                Cell titleCell = new Cell(1, 7).add(title);
                
                titleTable.addCell(titleCell);

// Adicionar a imagem à tabela, mesclando 7 colunas
                Cell imageCell = new Cell(1, 7).add(image);
                titleTable.addCell(imageCell);

// Adicionar a tabela do título ao documento
                document.add(titleTable);

                // Consulta SQL para recuperar os dados dos clientes
                String sql = "SELECT * FROM tbclientes";
                PreparedStatement stmt = conexao.prepareStatement(sql);
                ResultSet rs = stmt.executeQuery();

                // Criar uma tabela com 7 colunas para os dados dos clientes
                Table table = new Table(7); // Número de colunas

                // Adicionar cabeçalhos à tabela
                table.addCell(new Cell().add(new Paragraph("ID do Cliente")));
                table.addCell(new Cell().add(new Paragraph("Nome")));
                table.addCell(new Cell().add(new Paragraph("Endereço")));
                table.addCell(new Cell().add(new Paragraph("Cidade")));
                table.addCell(new Cell().add(new Paragraph("Código Postal")));
                table.addCell(new Cell().add(new Paragraph("Telefone")));
                table.addCell(new Cell().add(new Paragraph("E-mail")));

                // Adicionar os dados dos clientes à tabela
                while (rs.next()) {
                    table.addCell(new Cell().add(new Paragraph(Integer.toString(rs.getInt("clienteid")))));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("nomecliente"))));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("endereco"))));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("cidade"))));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("codigopostal"))));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("telcliente"))));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("emailcliente"))));
                }

                // Adicionar a tabela ao documento
                document.add(table);

                // Fechar o documento
                document.close();

                // Informar ao usuário que o relatório foi gerado com sucesso
                JOptionPane.showMessageDialog(null, "Relatório de clientes gerado com sucesso!");

                // Abrir o arquivo PDF com o visualizador padrão de PDF
                File relatorioFile = new File("relatorio-clientes.pdf");
                Desktop.getDesktop().open(relatorioFile);
            } catch (SQLException | IOException e) {
                // Capturar possíveis exceções e exibir uma mensagem de erro
                JOptionPane.showMessageDialog(null, "Erro ao gerar relatório: " + e.getMessage());
            }
        }

    }//GEN-LAST:event_menRelCliActionPerformed

    private void menRelSerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menRelSerActionPerformed
        int confirma = JOptionPane.showConfirmDialog(null, "Confirma a inpressao do relatorio de Clientes?", "Atencao", JOptionPane.YES_NO_OPTION);
        if (confirma == JOptionPane.YES_OPTION) {
            try {
                // Criar um novo documento PDF
                PdfDocument pdfDoc = new PdfDocument(new PdfWriter("relatorio-ordens-servico.pdf"));
                Document document = new Document(pdfDoc);
                
                  // Carregar a imagem
                URL imageUrl = getClass().getResource("/compserv/icones/Servcomplogo.png");
                ImageData imageData = ImageDataFactory.create(imageUrl);
                Image image = new Image(imageData);

                // Ajustar o tamanho da imagem
                image.scaleToFit(99, 99);

                Paragraph title = new Paragraph("Relatório de Servicos").setFontSize(20).setTextAlignment(TextAlignment.CENTER).setBold();
                
                
                     // Criar uma tabela com 7 colunas para o título e a imagem
                Table titleTable = new Table(14);

// Adicionar o título à tabela, mesclando 7 colunas
                Cell titleCell = new Cell(1, 7).add(title);
                
                titleTable.addCell(titleCell);

// Adicionar a imagem à tabela, mesclando 7 colunas
                Cell imageCell = new Cell(1, 7).add(image);
                titleTable.addCell(imageCell);

// Adicionar a tabela do título ao documento
                document.add(titleTable);

                // Consulta SQL para recuperar os dados das ordens de serviço e o total de ordens e valor total
                String sql = "SELECT *, COUNT(*) AS total_ordens, SUM(valor) AS valor_total FROM tbos GROUP BY clienteid";
                PreparedStatement stmt = conexao.prepareStatement(sql);
                ResultSet rs = stmt.executeQuery();

                // Criar uma tabela com 8 colunas para os dados das ordens de serviço
                Table table = new Table(8); // Número de colunas

                // Adicionar cabeçalhos à tabela
                table.addCell(new Cell().add(new Paragraph("ID OS")));
                table.addCell(new Cell().add(new Paragraph("Data")));
                table.addCell(new Cell().add(new Paragraph("Equipamento")));
                table.addCell(new Cell().add(new Paragraph("Defeito")));
                table.addCell(new Cell().add(new Paragraph("Serviço")));
                table.addCell(new Cell().add(new Paragraph("Técnico")));
                table.addCell(new Cell().add(new Paragraph("Valor")));
                table.addCell(new Cell().add(new Paragraph("Cliente ID")));

                int totalOrdens = 0;
                double valorTotal = 0.0;

                // Adicionar os dados das ordens de serviço à tabela
                while (rs.next()) {
                    table.addCell(new Cell().add(new Paragraph(Integer.toString(rs.getInt("os")))));
                    table.addCell(new Cell().add(new Paragraph(rs.getTimestamp("data_os").toString())));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("equipamento"))));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("defeito"))));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("servico"))));
                    table.addCell(new Cell().add(new Paragraph(rs.getString("tecnico"))));
                    table.addCell(new Cell().add(new Paragraph(Double.toString(rs.getDouble("valor")))));
                    table.addCell(new Cell().add(new Paragraph(Integer.toString(rs.getInt("clienteid")))));

                    // Atualizar o total de ordens e o valor total
                    totalOrdens += rs.getInt("total_ordens");
                    valorTotal += rs.getDouble("valor_total");
                }

                // Adicionar o total de ordens e valor total
                table.addCell(new Cell(1, 6).add(new Paragraph("Total de Ordens:")));
                table.addCell(new Cell().add(new Paragraph(Integer.toString(totalOrdens))));
                table.addCell(new Cell(1, 6).add(new Paragraph("Valor Total:")));
                table.addCell(new Cell().add(new Paragraph(Double.toString(valorTotal))));

                // Adicionar a tabela ao documento
                document.add(table);

                // Fechar o documento
                document.close();

                // Informar ao usuário que o relatório foi gerado com sucesso
                JOptionPane.showMessageDialog(null, "Relatório de Ordens de Serviço gerado com sucesso!");

                // Abrir o arquivo PDF com o visualizador padrão de PDF
                File relatorioFile = new File("relatorio-ordens-servico.pdf");
                Desktop.getDesktop().open(relatorioFile);
            } catch (SQLException | IOException e) {
                // Capturar possíveis exceções e exibir uma mensagem de erro
                JOptionPane.showMessageDialog(null, "Erro ao gerar relatório: " + e.getMessage());
            }
        }


    }//GEN-LAST:event_menRelSerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Tela_Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar Menu;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblData;
    public static javax.swing.JLabel lblUsuario;
    private javax.swing.JMenu menAju;
    private javax.swing.JMenuItem menAjuSob;
    private javax.swing.JMenu menCad;
    private javax.swing.JMenuItem menCadCli;
    private javax.swing.JMenuItem menCadOs;
    public static javax.swing.JMenuItem menCadUser;
    private javax.swing.JMenu menOp;
    private javax.swing.JMenuItem menOpEx;
    public static javax.swing.JMenu menRel;
    private javax.swing.JMenuItem menRelCli;
    private javax.swing.JMenuItem menRelSer;
    // End of variables declaration//GEN-END:variables
}
